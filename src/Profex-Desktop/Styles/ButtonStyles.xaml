
    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

        <Style x:Key="MinimizedButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="B"
                            Background="{DynamicResource SideBarBackground}"
                            CornerRadius="50">
                            <Path Fill="#768C9E" Data="{DynamicResource minus}" Height="3" Width="10" Stretch="UniformToFill" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="B" Property="Background" Value="#2C3848"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="B" Property="Background" Value="{DynamicResource SideBarBackground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="B" Property="Background" Value="#2c3848"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MaximizedButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="B"
                            Background="{DynamicResource SideBarBackground}"
                            CornerRadius="50">
                            <Path Fill="#768C9E" 
                              Data="{DynamicResource maximize}" Height="10" Width="10" Stretch="UniformToFill"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="B" Property="Background" Value="#2C3848"/>
                            </Trigger>
                            <!--<Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#939393"/>
                        </Trigger>-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="B" Property="Background" Value="#2c3848"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloseButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="B"
                            Background="{DynamicResource SideBarBackground}"
                            CornerRadius="50" Padding="0">
                            <Path Fill="#768C9E"
                              Data="{DynamicResource x}" Height="10" Width="10" Stretch="UniformToFill"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="B" Property="Background" Value="red"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="B" Property="Background" Value="{DynamicResource SideBarBackground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="B" Property="Background" Value="red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SideBarButton" TargetType="{x:Type RadioButton}">
            <Setter Property="Height" Value="70"/>
            <Setter Property="Width" Value="70"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border x:Name="B" CornerRadius="100" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" 
                                Width="{TemplateBinding Width}" VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <Path x:Name="icon"
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                  Fill="{DynamicResource ProfileImageBackground}"
                                  Height="30" Width="30"
                                  Stretch="Fill"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="B" Property="Background" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="B" Property="Background" Value="{DynamicResource RadioBUttonMouseOverBackground}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="B" Property="Background" Value="{DynamicResource RadioButtonBackGround}"/>
                                <Setter TargetName="icon" Property="Fill" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LightMode" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="70"/>
            <Setter Property="Width" Value="70"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="B" CornerRadius="100" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" 
                                Width="{TemplateBinding Width}" VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <Path x:Name="icon"
                                  Grid.Column="1"
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                  Fill="White"
                                  Height="25" Width="25"
                                  Stretch="UniformToFill"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="B" Property="Background" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="B" Property="Background" Value="{DynamicResource RadioBUttonMouseOverBackground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="B" Property="Background" Value="{DynamicResource RadioButtonBackGround}"/>
                                <Setter TargetName="icon" Property="Fill" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="EditButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Margin" Value="0 10 0 30"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource ProfileImageBackground}"/>
            <Setter Property="Background" Value="#212529"/>
            <Setter Property="Content" Value="Edit"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="B" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <Label x:Name="L" Content="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}"
                               FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"
                               VerticalAlignment="Center" HorizontalAlignment="Center" Padding="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="B" Property="Background" Value="Gray"/>
                                <Setter TargetName="L" Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="B" Property="Background" Value="#212529"/>
                                <Setter TargetName="L" Property="Foreground" Value="{DynamicResource ProfileImageBackground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="B" Property="Background" Value="#343a40"/>
                                <Setter TargetName="L" Property="Foreground" Value="{DynamicResource ProfileImageBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SignOutButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Margin" Value="0 20 0 0"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource ProfileImageBackground}"/>
            <Setter Property="Background" Value="#212529"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="B" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path x:Name="icon"
                                  Grid.Column="0"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                  Fill="White"
                                  Height="20" Width="20"
                                  Stretch="UniformToFill"/>
                                <Label Grid.Column="1" x:Name="L" Content="Log Out" FontFamily="{TemplateBinding FontFamily}"
                               FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"
                               VerticalAlignment="Center" HorizontalAlignment="Left" Padding="{TemplateBinding Padding}" Margin="5 0 0 0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="B" Property="Background" Value="Gray"/>
                                <Setter TargetName="L" Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="B" Property="Background" Value="#212529"/>
                                <Setter TargetName="L" Property="Foreground" Value="{DynamicResource ProfileImageBackground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="B" Property="Background" Value="#343a40"/>
                                <Setter TargetName="L" Property="Foreground" Value="{DynamicResource ProfileImageBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Search button style-->
        <Style x:Key="btnSearch" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Content" Value="{DynamicResource btnSearchContent}"/>
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyNormal}"/>
            <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderThickness="0 1" BorderBrush="{DynamicResource ProfileImageBackground}"
                            Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <Label Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                               FontSize="{TemplateBinding FontSize}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                                   Padding="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--Next and Pre buttun style-->
        <Style x:Key="PreNextButtons" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="15"/>
            <Setter Property="Width" Value="15"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="B"
                            Background="{DynamicResource SideBarBackground}"
                            CornerRadius="50" Padding="0">
                            <Path x:Name="icon"
                                  Grid.Column="1"
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                  Fill="White"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Height="10" Width="10"
                                  Stretch="Uniform"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="B" Property="Background" Value="#2C3848"/>
                            </Trigger>
                            <!--<Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#939393"/>
                        </Trigger>-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="B" Property="Background" Value="#2c3848"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--SignUp Buttons style-->
        <Style x:Key="MenuButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="140"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ProfileImageBackground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyNormal}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Padding" Value="0 4 0 0"/>
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="B" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="10"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0"
                                   x:Name="textl" 
                                   Content="{TemplateBinding Content}"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Left"/>
                            
                            <Border x:Name="Indicator"
                                    Grid.Row="2"
                                    Visibility="Hidden"
                                    Width="40"
                                    Height="3"
                                    CornerRadius="5"
                                    VerticalAlignment="Bottom"
                                    HorizontalAlignment="Center"
                                    Background="Blue"/>
                            
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <!--SignIn Buttons style-->
        <Style x:Key="MenuButton1" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="140"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ProfileImageBackground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyNormal}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Padding" Value="0 4 0 0"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="B" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="10"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0"
                                   x:Name="textl" 
                                   Content="{TemplateBinding Content}"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Left"/>

                            <Border x:Name="Indicator"
                                    Grid.Row="2"
                                    Visibility="Hidden"
                                    Width="40"
                                    Height="3"
                                    Margin="3 0 0 0"
                                    CornerRadius="5"
                                    VerticalAlignment="Bottom"
                                    HorizontalAlignment="Left"
                                    Background="Blue"/>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <!--SignUp/SignIn Buttons style-->
        <Style x:Key="HyperLink" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#0077b6"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyNormal}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" Background="{TemplateBinding Background}">
                        <Label Grid.Row="0"
                                   x:Name="textl" 
                                   Content="{TemplateBinding Content}"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Left"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                            <Setter TargetName="textl" Property="Foreground" Value="#0582ca"/>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                            <Setter TargetName="textl" Property="Foreground" Value="#001f54"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <Style x:Key="RegisterPageCloseButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B"
                            Background="{DynamicResource SideBarBackground}"
                            CornerRadius="50" Padding="0">
                        <Path Fill="#768C9E"
                              Data="{DynamicResource x}" Height="10" Width="10" Stretch="UniformToFill"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#495057"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource SideBarBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#212529"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


        <!--SignUp button style-->
        <Style x:Key="bntSignUp" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="290"/>
        <Setter Property="Background" Value="#2d00f7"/>
        <Setter Property="Foreground" Value="{DynamicResource ProfileImageBackground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyNormal}"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="10" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
                            Background="{TemplateBinding Background}">
                        <Label x:Name="lbl" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"
                               FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}"
                               FontSize="{TemplateBinding FontSize}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#023e8a" TargetName="B"/>
                            <Setter Property="Foreground" Value="#fefae0" TargetName="lbl"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="#2d00f7" TargetName="B"/>
                            <Setter Property="Foreground" Value="{DynamicResource ProfileImageBackground}" TargetName="lbl"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#03045e" TargetName="B"/>
                            <Setter Property="Foreground" Value="{DynamicResource ProfileImageBackground}" TargetName="lbl"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <!--In Registerpage "I have an account" button style -->
        <Style x:Key="btnIhavenot" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyNormal}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="0 370 0 0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" Background="{TemplateBinding Background}">
                        <Label x:Name="lbl" Content="{TemplateBinding Content}"
                               Foreground="{TemplateBinding Foreground}"
                               FontSize="{TemplateBinding FontSize}"
                               FontFamily="{TemplateBinding FontFamily}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" TargetName="B"/>
                            <Setter Property="Foreground" Value="#ef233c" TargetName="lbl"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" TargetName="B"/>
                            <Setter Property="Foreground" Value="Red" TargetName="lbl"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent" TargetName="B"/>
                            <Setter Property="Foreground" Value="#9d0208" TargetName="lbl"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        <!--In Registerpage "I have an account" button style -->
        <Style x:Key="btnIhave" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyNormal}"/>
        <Setter Property="Margin" Value="0 320 0 0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" Background="{TemplateBinding Background}">
                        <Label x:Name="lbl" Content="{TemplateBinding Content}"
                               Foreground="{TemplateBinding Foreground}"
                               FontSize="{TemplateBinding FontSize}"
                               FontFamily="{TemplateBinding FontFamily}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" TargetName="B"/>
                            <Setter Property="Foreground" Value="#ef233c" TargetName="lbl"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" TargetName="B"/>
                            <Setter Property="Foreground" Value="Red" TargetName="lbl"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent" TargetName="B"/>
                            <Setter Property="Foreground" Value="#9d0208" TargetName="lbl"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <!--Offerta window back button-->
        <Style x:Key="btnBack" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Background" Value="#f8f9fa"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="40" Background="{TemplateBinding Background}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            BorderBrush="#adb5bd"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            BorderThickness="1">
                        <Path Fill="Black"
                              Data="{DynamicResource Back}" Height="10" Width="10" Stretch="UniformToFill"
                              VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


        <!--Change number button style -->
        <Style x:Key="btnChange" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyNormal}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" Background="{TemplateBinding Background}">
                        <Label x:Name="lbl" Content="{TemplateBinding Content}"
                               Foreground="{TemplateBinding Foreground}"
                               FontSize="{TemplateBinding FontSize}"
                               FontFamily="{TemplateBinding FontFamily}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" TargetName="B"/>
                            <Setter Property="Foreground" Value="Gray" TargetName="lbl"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" TargetName="B"/>
                            <Setter Property="Foreground" Value="LightGray" TargetName="lbl"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent" TargetName="B"/>
                            <Setter Property="Foreground" Value="DarkGray" TargetName="lbl"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    
        <!--Vacancy images radioButtons-->
        <Style x:Key="Images" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="B" CornerRadius="10" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" 
                                Width="{TemplateBinding Width}" VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" x:Name="indicator" Height="12" Width="12" CornerRadius="10"
                                    VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <Image Grid.Column="1" Stretch="Uniform" Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                            <Setter TargetName="indicator" Property="Background" Value="{DynamicResource ProfileImageBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
     
        <!--Vacancy GMP Icon Button-->
        <Style x:Key="GMP" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource GMPColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyNormal}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" BorderThickness="0" Height="{TemplateBinding Height}" 
                            Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="P" Grid.Column="0" Fill="#d80032"
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" 
                                  Height="25" Width="25" 
                                  Stretch="Uniform" Margin="5 0 0 0"/>
                            <Label x:Name="Lbl" Grid.Column="1" Content="{DynamicResource GMPVacancy}" Padding="{TemplateBinding Padding}"
                                   FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}"
                                   FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" HorizontalAlignment="Left"
                                   Margin="5 0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="#d90429" TargetName="P"/>
                            <Setter Property="Foreground" Value="{DynamicResource lblVacancyLongLatitudeAnswerMouseOverColor}" TargetName="Lbl"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Fill" Value="#d80032" TargetName="P"/>
                            <Setter Property="Foreground" Value="{DynamicResource lblVacancyLongLatitudeAnswerColor}" TargetName="Lbl"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" Value="#bf0603" TargetName="P"/>
                            <Setter Property="Foreground" Value="{DynamicResource lblVacancyLongLatitudeAnswerMouseOverColor}" TargetName="Lbl"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>
